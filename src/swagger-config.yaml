openapi: 3.0.0
info:
  title: Delivery Bot API
  version: 1.0.0-oas3
  description: "**Welcome to DBX's API!**\r\n\r\nThe DBX API allows you to integrate your application or website with the DBX courier network. Whether you need to deliver an order ASAP or within a customer-selected time frame, our API enables you to automate the entire delivery process.\r\n\r\nThis documentation provides the necessary resources, examples, and guidelines to help you create, manage, and monitor deliveries.\r\n\r\nAll requests require the use of a bearer token, which can be created in your portal under Automation > API.\r\n\r\nResources:\r\n<br>\r\n[Postman](https://www.postman.com/dbx-delivery/dbx-api/overview)\r\n<br>\r\n[FAQ](https://dbx.delivery/faq#dev)"
  contact:
    email: webmaster@dbx.delivery
    name: Delivery Bot Support
  termsOfService: "http://dbx.delivery/terms"
servers:
  - url: "https://sandbox-api.dbx.delivery"
    description: Development
  - url: "https://api.dbx.delivery"
    description: Production
tags:
  - name: quote
    description: Retrieve a Quote (before creating or updating an order)
  - name: orders
    description: Manage your orders
  - name: slots
    description: Retrieve available time slots
  - name: webhooks
    description: All webhooks are sent to a single url and defined by event property
paths:
  /quote:
    parameters: []
    post:
      tags:
        - quote
      summary: Create a quote
      operationId: post-quote
      responses:
        "200":
          description: OK - Quote returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
              examples:
                "":
                  $ref: "#/components/examples/quote"
        "400":
          $ref: "#/components/responses/400-missing_params"
        "401":
          $ref: "#/components/responses/401-authentication_error"
        "422":
          $ref: "#/components/responses/422-invalid_params"
        "500":
          $ref: "#/components/responses/500-internal_server_error"
      description: "Validates if the order is serviceable by DBX and returns a quote. The quoted price will remain fixed and will not change, regardless of when the order is placed."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              Simple ASAP quote:
                value:
                  pickup:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
                  delivery:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
                    items:
                      - description: bag
                        quantity: 1
                        size: small
              Quote with time-frame:
                value:
                  pickup:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
                  delivery:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
                    items:
                      - description: bag
                        quantity: 1
                        size: small
                  timeframe:
                    start_time: "2025-03-22T15:00:00.000Z"
                    end_time: "2025-03-22T18:00:00.000Z"
  "/quote/{order_id}":
    patch:
      tags:
        - quote
      summary: Modify order quote
      operationId: patch-quote
      parameters:
        - schema:
            type: string
          name: order_id
          in: path
          required: true
          description: Order id of the delivery OR external_order_id
      responses:
        "200":
          description: OK - Quote returned
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      previous_price:
                        type: integer
                        readOnly: true
                  - $ref: "#/components/schemas/Quote"
              examples:
                "":
                  value:
                    previous_price: 1347
                    price: 1347
                    tip: 0
                    discount:
                      percentage: 15
                      original: 1585
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              Updating tip:
                value:
                  delivery:
                    tip: 250
              Updating delivery address (only allowed at "processing"):
                value:
                  delivery:
                    address:
                      street: 400 E 74 St
                      zip: 10021
      description: "Validates if the updated order is serviceable by DBX and returns a revised quote. Only post fields you wish to update. Changes to the address, items, or timeframe may affect the original order quote. Please refer to our FAQ guide for details on allowed updates based on the order status."
  /orders:
    post:
      tags:
        - orders
      summary: Create an order
      operationId: post-order
      responses:
        "200":
          description: OK - Order successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
              examples:
                "":
                  $ref: "#/components/examples/order"
        "401":
          $ref: "#/components/responses/401-authentication_error"
        "422":
          $ref: "#/components/responses/422-invalid_params"
        "500":
          $ref: "#/components/responses/500-internal_server_error"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              Simple ASAP order:
                value:
                  pickup:
                    name: John Doe
                    phone: "1234567890"
                    address:
                      street: 2049 Broadway
                      zip: 10023
                  delivery:
                    name: Jane Doe
                    phone: (123)123-1234
                    address:
                      street: 14 N Moore St
                      zip: 10013
                    items:
                      - description: bag
                        quantity: 1
                        size: small
              Timeframe order with proof of delivery:
                value:
                  external_order_id: "1"
                  pickup:
                    name: John Doe
                    phone: "1234567890"
                    apt: ground level
                    note: Please pickup at front desk
                    external_customer_id: "1"
                    address:
                      street: 2049 Broadway
                      city: New York
                      state: NY
                      zip: 10023
                    required_verification:
                      picture: true
                  delivery:
                    tip: 200
                    name: Jane Doe
                    phone: (123)123-1234
                    apt: 47A
                    note: Use service entrance on Jane St
                    external_customer_id: "2"
                    address:
                      street: 14 N Moore St
                      city: New York
                      state: NY
                      zip: 10013
                    required_verification:
                      picture: true
                      signature: true
                      recipient: true
                    items:
                      - description: keg
                        quantity: 2
                        length: 20
                        width: 15
                        height: 10
                        weight: 10
                      - description: tripod
                        quantity: 1
                        length: 20
                        width: 15
                        height: 10
                        weight: 10
                  timeframe:
                    start_time: "2025-03-22T15:00:00.000Z"
                    end_time: "2025-03-22T18:00:00.000Z"
      description: Creates a new delivery between two addresses.
  "/orders/{order_id}":
    get:
      tags:
        - orders
      summary: Get an order
      responses:
        "200":
          description: Ok - Successfully returned order details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
              examples:
                "":
                  $ref: "#/components/examples/order"
        "401":
          $ref: "#/components/responses/401-authentication_error"
        "404":
          $ref: "#/components/responses/404-not_found"
        "500":
          $ref: "#/components/responses/500-internal_server_error"
      operationId: get-order
      description: "Retrieves the details of an existing order, specified by the order_id or external_order_id in the URL."
      parameters:
        - schema:
            type: string
          in: query
          name: order_id
          description: Order id of the delivery OR external_order_id
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
        description: Order id of the delivery OR external_order_id
    patch:
      tags:
        - orders
      summary: Modify an Order
      operationId: patch-order-order_id
      responses:
        "200":
          description: Ok - Successfully updated order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
              examples:
                "":
                  $ref: "#/components/examples/order"
        "401":
          $ref: "#/components/responses/401-authentication_error"
        "404":
          $ref: "#/components/responses/404-not_found"
        "422":
          $ref: "#/components/responses/422-invalid_params"
        "500":
          $ref: "#/components/responses/500-internal_server_error"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              Modify timeframe:
                value:
                  timeframe:
                    service: 2_hour
                    start_time: "2019-08-24T14:15:22Z"
                    end_time: "2019-08-24T14:15:22Z"
              Modify delivery location:
                value:
                  delivery:
                    name: string
                    phone: string
                    note: string
                    location:
                      access_code: string
                      street_address_1: string
                      street_address_2: string
                      city: string
                      zip: string
                      state: string
      description: "Modifies an existing delivery order, specified by the order_id or external_order_id in the URL. Only post fields you wish to update. Please refer to our FAQ guide for details on allowed updates based on the order status."
    put:
      tags:
        - orders
      summary: Cancel an Order
      operationId: put-order-order_id
      responses:
        "200":
          description: Ok - Successfully canceled order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
              examples:
                "":
                  $ref: "#/components/examples/order"
        "404":
          $ref: "#/components/responses/404-not_found"
      description: "Cancels a previously placed order, specified by the order_id in the URL."
  /slots:
    post:
      tags:
        - slots
      summary: Get earliest available slot
      operationId: post-slot
      responses:
        "200":
          description: OK - Earliest timeframe returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Timeframe"
              examples:
                "":
                  value:
                    service: 3-hour
                    start_time: "2025-03-22T15:00:00.000Z"
                    end_time: "2025-03-22T18:00:00.000Z"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              Example 1:
                $ref: "#/components/examples/order"
      description: Retrieves the earliest available time slot for a delivery between two addresses.
  "/slots/{date}":
    parameters:
      - schema:
          type: string
        name: date
        in: path
        required: true
        description: Date to return available slots for (not specifying a date returns first available slot)
    post:
      tags:
        - slots
      summary: Get available slots for date
      operationId: post-slots-date
      responses:
        "200":
          description: OK - Available timeframes for specified date returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slots"
              examples:
                "":
                  value:
                    - service: 1-hour
                      slots:
                        - start_time: "2025-03-01T14:00:00.000Z"
                          end_time: "2025-03-01T15:00:00.000Z"
                        - start_time: "2025-03-01T15:00:00.000Z"
                          end_time: "2025-03-01T16:00:00.000Z"
                        - start_time: "2025-03-01T16:00:00.000Z"
                          end_time: "2025-03-01T17:00:00.000Z"
                        - start_time: "2025-03-01T17:00:00.000Z"
                          end_time: "2025-03-01T18:00:00.000Z"
                        - start_time: "2025-03-01T18:00:00.000Z"
                          end_time: "2025-03-01T19:00:00.000Z"
                        - start_time: "2025-03-01T19:00:00.000Z"
                          end_time: "2025-03-01T20:00:00.000Z"
                        - start_time: "2025-03-01T20:00:00.000Z"
                          end_time: "2025-03-01T21:00:00.000Z"
                        - start_time: "2025-03-01T21:00:00.000Z"
                          end_time: "2025-03-01T22:00:00.000Z"
                        - start_time: "2025-03-01T22:00:00.000Z"
                          end_time: "2025-03-01T23:00:00.000Z"
                        - start_time: "2025-03-01T23:00:00.000Z"
                          end_time: "2025-03-02T00:00:00.000Z"
                    - service: 3-hour
                      slots:
                        - start_time: "2025-03-01T15:00:00.000Z"
                          end_time: "2025-03-01T18:00:00.000Z"
                        - start_time: "2025-03-01T16:00:00.000Z"
                          end_time: "2025-03-01T19:00:00.000Z"
                        - start_time: "2025-03-01T17:00:00.000Z"
                          end_time: "2025-03-01T20:00:00.000Z"
                        - start_time: "2025-03-01T18:00:00.000Z"
                          end_time: "2025-03-01T21:00:00.000Z"
                        - start_time: "2025-03-01T19:00:00.000Z"
                          end_time: "2025-03-01T22:00:00.000Z"
                        - start_time: "2025-03-01T20:00:00.000Z"
                          end_time: "2025-03-01T23:00:00.000Z"
                        - start_time: "2025-03-01T21:00:00.000Z"
                          end_time: "2025-03-02T00:00:00.000Z"
                        - start_time: "2025-03-01T22:00:00.000Z"
                          end_time: "2025-03-02T01:00:00.000Z"
                        - start_time: "2025-03-01T23:00:00.000Z"
                          end_time: "2025-03-02T02:00:00.000Z"
                    - service: same-day
                      slots:
                        - start_time: "2025-03-01T19:00:00.000Z"
                          end_time: "2025-03-02T00:00:00.000Z"
        "401":
          $ref: "#/components/responses/401-authentication_error"
        "422":
          $ref: "#/components/responses/422-invalid_params"
        "500":
          $ref: "#/components/responses/500-internal_server_error"
      description: Returns a list of available time slots between two addresses on the specified date.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
            examples:
              "":
                value:
                  pickup:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
                  delivery:
                    address:
                      street: 400 E 74 St
                      zip: "10021"
  /order.processing:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Order processing
      operationId: order.processing
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      event:
                        type: string
                        x-stoplight:
                          id: nd1jvyz0t57rt
                  - $ref: "#/components/schemas/Order"
              examples:
                "":
                  value:
                    event: order.processing
                    order_id: SEWG5J
                    external_order_id: null
                    status: processing
                    pickup:
                      customer_id: 1
                      phone: 1234567890
                      name: West Side Wines
                      apt: "1"
                      external_customer_id: null
                      phone_formatted: (123) 456-7890
                      note: ""
                      eta: null
                      address:
                        address_id: 783607
                        formatted: "1305 York Ave, New York, NY 10021"
                        street: 1305 York Ave
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7654
                        lon: -73.9551
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: true
                      uploaded_verification:
                        picture: {}
                    delivery:
                      customer_id: 2
                      phone: 2147483647
                      name: Olivia Thompson
                      apt: ""
                      external_customer_id: null
                      phone_formatted: (214) 748-3647
                      note: ""
                      eta: null
                      address:
                        address_id: 863611
                        formatted: "300 E 71 St, New York, NY 10021"
                        street: 300 E 71st St
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7679
                        lon: -73.9585
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: false
                        recipient: false
                        signature: false
                      uploaded_verification:
                        picture: {}
                        recipient: {}
                        signature: {}
                      items:
                        max_weight: 100
                        max_dimension: 25
                        total_quantity: 1
                        total_weight: 100
                        cubic_feet: 0.93
                        exact: true
                        size: large
                        description: Fits in car trunk
                        additional: 3000
                        items:
                          - description: keg
                            quantity: 1
                            length: 8
                            width: 8
                            height: 25
                            weight: 100
                            measurement: 100lbs | 8” x 8” x 25”
                            size: large
                    timeframe:
                      service: 3-hour
                      start_time: "2025-01-27T15:00:00.000Z"
                      end_time: "2025-01-27T18:00:00.000Z"
                    created_at: "2025-01-27T15:00:00.000Z"
                    last_updated: "2025-01-27T15:00:00.000Z"
                    pickup_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    delivery_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    price: 7
                    tip: 300
                    driver: {}
                    logs:
                      - log_id: 2
                        log: arrived_at_delivery
                        by: driver
                        datetime: "2025-01-27T15:55:00.000Z"
                        is_completed: true
                      - log_id: 1
                        log: arrived_at_pickup
                        by: driver
                        datetime: "2025-01-27T15:12:00.000Z"
                        is_completed: true
                    date_time: "2024-04-12T03:59:05.000Z"
  /order.updated:
    post:
      tags:
        - webhooks
      summary: Order information updated
      operationId: order.updated
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      event:
                        type: string
                        x-stoplight:
                          id: d0gvdtd6zlhtc
                  - $ref: "#/components/schemas/Order"
              examples:
                "":
                  value:
                    event: order.updated
                    order_id: SEWG5J
                    external_order_id: null
                    status: processing
                    pickup:
                      customer_id: 1
                      phone: 1234567890
                      name: West Side Wines
                      apt: "1"
                      external_customer_id: null
                      phone_formatted: (123) 456-7890
                      note: ""
                      eta: null
                      address:
                        address_id: 783607
                        formatted: "1305 York Ave, New York, NY 10021"
                        street: 1305 York Ave
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7654
                        lon: -73.9551
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: true
                      uploaded_verification:
                        picture: {}
                    delivery:
                      customer_id: 2
                      phone: 2147483647
                      name: Olivia Thompson
                      apt: ""
                      external_customer_id: null
                      phone_formatted: (214) 748-3647
                      note: ""
                      eta: null
                      address:
                        address_id: 863611
                        formatted: "300 E 71 St, New York, NY 10021"
                        street: 300 E 71st St
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7679
                        lon: -73.9585
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: false
                        recipient: false
                        signature: false
                      uploaded_verification:
                        picture: {}
                        recipient: {}
                        signature: {}
                      items:
                        max_weight: 100
                        max_dimension: 25
                        total_quantity: 1
                        total_weight: 100
                        cubic_feet: 0.93
                        exact: true
                        size: large
                        description: Fits in car trunk
                        additional: 3000
                        items:
                          - description: keg
                            quantity: 1
                            length: 8
                            width: 8
                            height: 25
                            weight: 100
                            measurement: 100lbs | 8” x 8” x 25”
                            size: large
                    timeframe:
                      service: 3-hour
                      start_time: "2025-01-27T15:00:00.000Z"
                      end_time: "2025-01-27T18:00:00.000Z"
                    created_at: "2025-01-27T15:00:00.000Z"
                    last_updated: "2025-01-27T15:00:00.000Z"
                    pickup_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    delivery_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    price: 7
                    tip: 300
                    driver: {}
                    logs:
                      - log_id: 2
                        log: arrived_at_delivery
                        by: driver
                        datetime: "2025-01-27T15:55:00.000Z"
                        is_completed: true
                      - log_id: 1
                        log: arrived_at_pickup
                        by: driver
                        datetime: "2025-01-27T15:12:00.000Z"
                        is_completed: true
                    date_time: "2024-04-12T03:59:05.000Z"
    parameters: []
  /order.canceled:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Order cancelled by user
      operationId: order.canceled
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      event:
                        type: string
                        x-stoplight:
                          id: xfwa7wjh9ewf4
                  - $ref: "#/components/schemas/Order"
              examples:
                "":
                  value:
                    event: order.canceled
                    order_id: SEWG5J
                    external_order_id: null
                    status: processing
                    pickup:
                      customer_id: 1
                      phone: 1234567890
                      name: West Side Wines
                      apt: "1"
                      external_customer_id: null
                      phone_formatted: (123) 456-7890
                      note: ""
                      eta: null
                      address:
                        address_id: 783607
                        formatted: "1305 York Ave, New York, NY 10021"
                        street: 1305 York Ave
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7654
                        lon: -73.9551
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: true
                      uploaded_verification:
                        picture: {}
                    delivery:
                      customer_id: 2
                      phone: 2147483647
                      name: Olivia Thompson
                      apt: ""
                      external_customer_id: null
                      phone_formatted: (214) 748-3647
                      note: ""
                      eta: null
                      address:
                        address_id: 863611
                        formatted: "300 E 71 St, New York, NY 10021"
                        street: 300 E 71st St
                        city: New York
                        state: NY
                        zip: "10021"
                        lat: 40.7679
                        lon: -73.9585
                        pickup: true
                        delivery: true
                        source: API
                      required_verification:
                        picture: false
                        recipient: false
                        signature: false
                      uploaded_verification:
                        picture: {}
                        recipient: {}
                        signature: {}
                      items:
                        max_weight: 100
                        max_dimension: 25
                        total_quantity: 1
                        total_weight: 100
                        cubic_feet: 0.93
                        exact: true
                        size: large
                        description: Fits in car trunk
                        additional: 3000
                        items:
                          - description: keg
                            quantity: 1
                            length: 8
                            width: 8
                            height: 25
                            weight: 100
                            measurement: 100lbs | 8” x 8” x 25”
                            size: large
                    timeframe:
                      service: 3-hour
                      start_time: "2025-01-27T15:00:00.000Z"
                      end_time: "2025-01-27T18:00:00.000Z"
                    created_at: "2025-01-27T15:00:00.000Z"
                    last_updated: "2025-01-27T15:00:00.000Z"
                    pickup_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    delivery_tracking_url: "https://track.dbx.delivery/?token={{vault:json-web-token}}"
                    price: 7
                    tip: 300
                    driver: {}
                    logs:
                      - log_id: 2
                        log: arrived_at_delivery
                        by: driver
                        datetime: "2025-01-27T15:55:00.000Z"
                        is_completed: true
                      - log_id: 1
                        log: arrived_at_pickup
                        by: driver
                        datetime: "2025-01-27T15:12:00.000Z"
                        is_completed: true
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.location:
    post:
      tags:
        - webhooks
      summary: Driver location updated
      operationId: driver.location
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.location
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
    parameters: []
  /driver.assigned:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver assigned to order
      operationId: driver.assigned
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.assigned
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.pickup_next_stop:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver en route to pickup
      operationId: driver.pickup_next_stop
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.pickup_next_stop
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.arrived_at_pickup:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver arrived at order pickup
      operationId: driver.arrived_at_pickup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.arrived_at_pickup
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.picked_up:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver picked-up order
      operationId: driver.picked_up
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.picked_up
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.delivery_next_stop:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver en route to delivery
      operationId: driver.delivery_next_stop
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.delivery_next_stop
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.arrived_at_delivery:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver arrived at order delivery
      operationId: driver.arrived_at_delivery
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.arrived_at_delivery
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.undeliverable:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver unable to deliver order (to be returned)
      operationId: driver.undeliverable
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.undeliverable
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.delivered:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver delivered order
      operationId: driver.delivered
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.delivered
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
  /driver.returned:
    parameters: []
    post:
      tags:
        - webhooks
      summary: Driver returned order
      operationId: driver.returned
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                "":
                  value:
                    event: driver.returned
                    order_id: 6QLV55
                    external_order_id: "12345"
                    driver:
                      name: John Doe
                      phone: "+12324231132"
                      vehicle: Toyota Highlander
                      location:
                        lat: "40.735073"
                        lon: "-73.994431"
                    date_time: "2024-04-12T03:59:05.000Z"
components:
  schemas:
    Quote:
      type: object
      x-examples:
        Example 1:
          $ref: "#/components/examples/quote"
      properties:
        price:
          type: integer
          readOnly: true
        tip:
          type: integer
          readOnly: true
        discount:
          type: object
          properties:
            percentage:
              type: integer
              readOnly: true
            original:
              type: integer
              readOnly: true
        timeframe:
          $ref: "#/components/schemas/Timeframe"
      title: ""
    Order:
      type: object
      x-examples:
        Example 1:
          order_id: IL3YK3
          external_order_id: "1"
          status: processing
          pickup:
            customer_id: 134
            phone: 1234567890
            name: John Doe
            apt: ground level
            external_customer_id: "1"
            phone_formatted: (123) 456-7890
            note: Please pickup at front desk
            eta: null
            address:
              address_id: 940645
              formatted: "2049 Broadway, New York, NY 10023"
              street: 2049 Broadway
              city: New York
              state: NY
              zip: "10023"
              lat: 40.7779
              lon: -73.9825
              pickup: true
              delivery: true
              source: API
            required_verification:
              picture: true
            uploaded_verification:
              picture: {}
          delivery:
            tip: 0
            customer_id: 133
            phone: 1231231234
            name: Jane Doe
            apt: 47A
            external_customer_id: "2"
            phone_formatted: (123) 123-1234
            note: Use service entrance on Jane St
            eta: null
            address:
              address_id: 512381
              formatted: "14 N Moore St, New York, NY 10013"
              street: 14 N Moore St
              city: New York
              state: NY
              zip: "10013"
              lat: 40.7197
              lon: -74.0066
              pickup: true
              delivery: true
              source: API
            required_verification:
              picture: true
              recipient: true
              signature: true
            uploaded_verification:
              picture: {}
              recipient: {}
              signature: {}
            items:
              max_weight: 10
              max_dimension: 20
              total_quantity: 3
              total_weight: 20
              cubic_feet: 1.74
              exact: true
              size: medium
              description: Fits in backseat
              additional: 700
              items:
                - description: keg
                  quantity: 2
                  length: 20
                  width: 15
                  height: 10
                  weight: 10
                  measurement: 10lbs | 20” x 15” x 10”
                  size: medium
                - description: tripod
                  quantity: 1
                  length: 20
                  width: 15
                  height: 10
                  weight: 10
                  measurement: 10lbs | 20” x 15” x 10”
                  size: medium
          timeframe:
            service: 3-hour
            start_time: "2025-03-22T15:00:00.000Z"
            end_time: "2025-03-22T18:00:00.000Z"
          created_at: "2025-02-25T20:09:31.000Z"
          last_updated: "2025-02-25T20:09:31.000Z"
          pickup_tracking_url: "https://track.dbx.delivery/?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmRlcl9pZCI6IklMM1lLMyIsInR5cGUiOiJwaWNrdXAiLCJpYXQiOjE3NDA1ODcwNTAsImV4cCI6MTc3NjU4NzA1MH0.7O9gMQ2_GEN5mrPH4aTezOW_U4Uu6vLRiZuzhmgWKvw"
          delivery_tracking_url: "https://track.dbx.delivery/?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmRlcl9pZCI6IklMM1lLMyIsInR5cGUiOiJkZWxpdmVyeSIsImlhdCI6MTc0MDU4NzA1MCwiZXhwIjoxNzc2NTg3MDUwfQ.dqADoalSGreamn8yDs8ke_0yJl4AEdmf6cB7denFWuI"
          price: 1347
          driver: {}
          logs:
            - log: delivered
              datetime:
                start: "2025-03-22T15:30:00.000Z"
                end: "2025-03-22T18:05:00.000Z"
              is_completed: false
            - log: arrived_at_delivery
              datetime:
                start: "2025-03-22T15:30:00.000Z"
                end: "2025-03-22T18:00:00.000Z"
              is_completed: false
            - log: picked_up
              datetime:
                start: "2025-03-22T14:30:00.000Z"
                end: "2025-03-22T17:30:00.000Z"
              is_completed: false
            - log: arrived_at_pickup
              datetime:
                start: "2025-03-22T14:30:00.000Z"
                end: "2025-03-22T17:30:00.000Z"
              is_completed: false
            - log: assigned
              datetime:
                start: "2025-03-22T14:20:00.000Z"
                end: "2025-03-22T17:30:00.000Z"
              is_completed: false
            - log_id: 23
              log: processing
              by: user
              datetime: "2025-02-25T20:09:31.000Z"
              is_completed: true
      properties:
        order_id:
          type: string
          readOnly: true
        external_order_id:
          type: string
        status:
          type: string
          readOnly: true
        pickup:
          allOf:
            - $ref: "#/components/schemas/Customer"
            - type: object
              properties:
                eta:
                  type: string
                  format: date-time
                  default: null
                  readOnly: true
                required_verification:
                  type: object
                  properties:
                    picture:
                      type: boolean
                uploaded_verification:
                  type: object
                  properties:
                    picture:
                      type: object
        delivery:
          allOf:
            - $ref: "#/components/schemas/Customer"
              type: object
              properties:
                tip:
                  type: integer
                  default: 0
                eta:
                  type: string
                  format: date-time
                  default: null
                  readOnly: true
                required_verification:
                  type: object
                  properties:
                    picture:
                      type: boolean
                    recipient:
                      type: boolean
                    signature:
                      type: boolean
                uploaded_verification:
                  type: object
                items:
                  type: object
                  properties:
                    max_weight:
                      type: string
                    items:
                      $ref: "#/components/schemas/Items"
        timeframe:
          $ref: "#/components/schemas/Timeframe"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          readOnly: true
        pickup_tracking_url:
          type: string
          readOnly: true
        delivery_tracking_url:
          type: string
          readOnly: true
        price:
          type: integer
          readOnly: true
        driver:
          type: object
          properties:
            name:
              type: string
              readOnly: true
        logs:
          type: array
          items:
            type: object
            properties:
              log:
                type: string
              datetime:
                type: string
              is_completed:
                type: boolean
              log_id:
                type: integer
              by:
                type: string
    Timeframe:
      type: object
      x-examples:
        Example:
          service: 1_hour
          start_time: "2023-11-22T21:00:00Z"
          end_time: "2023-11-22T22:00:00Z"
      properties:
        service:
          enum:
            - 1-hour
            - 3-hour
            - same-day
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
    Items:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          quantity:
            type: integer
          length:
            type: integer
          width:
            type: integer
          height:
            type: integer
          weight:
            type: integer
          measurement:
            type: string
          size:
            type: string
      x-examples:
        Example 1:
          - description: keg
            quantity: 2
            length: 20
            width: 15
            height: 10
            weight: 10
            measurement: 10lbs | 20” x 15” x 10”
            size: medium
    Customer:
      type: object
      x-examples:
        Example 1:
          customer_id: 134
          phone: 1234567890
          name: John Doe
          apt: ground level
          external_customer_id: "1"
          phone_formatted: (123) 456-7890
          note: Please pickup at front desk
          address:
            address_id: 940645
            formatted: "2049 Broadway, New York, NY 10023"
            street: 2049 Broadway
            city: New York
            state: NY
            zip: "10023"
            lat: 40.7779
            lon: -73.9825
            pickup: true
            delivery: true
            source: API
      required:
        - phone
        - name
      properties:
        customer_id:
          type: integer
          readOnly: true
        phone:
          type: integer
        name:
          type: string
        apt:
          type: string
        external_customer_id:
          type: string
        phone_formatted:
          type: string
          readOnly: true
        note:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Address:
      type: object
      x-examples:
        Example 1:
          address_id: 940645
          formatted: "2049 Broadway, New York, NY 10023"
          street: 2049 Broadway
          city: New York
          state: NY
          zip: "10023"
          lat: 40.7779
          lon: -73.9825
          pickup: true
          delivery: true
          source: API
      properties:
        address_id:
          type: integer
        formatted:
          type: string
          readOnly: true
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        lat:
          type: number
          readOnly: true
        lon:
          type: number
          readOnly: true
        pickup:
          type: boolean
          readOnly: true
        delivery:
          type: boolean
          readOnly: true
        source:
          type: string
          readOnly: true
    Slots:
      type: array
      items:
        type: object
        properties:
          service:
            type: string
          slots:
            type: array
            items:
              type: object
              properties:
                start_time:
                  type: string
                end_time:
                  type: string
      x-examples:
        Example 1:
          - service: 1-hour
            slots:
              - start_time: "2025-03-01T14:00:00.000Z"
                end_time: "2025-03-01T15:00:00.000Z"
              - start_time: "2025-03-01T15:00:00.000Z"
                end_time: "2025-03-01T16:00:00.000Z"
              - start_time: "2025-03-01T16:00:00.000Z"
                end_time: "2025-03-01T17:00:00.000Z"
              - start_time: "2025-03-01T17:00:00.000Z"
                end_time: "2025-03-01T18:00:00.000Z"
              - start_time: "2025-03-01T18:00:00.000Z"
                end_time: "2025-03-01T19:00:00.000Z"
              - start_time: "2025-03-01T19:00:00.000Z"
                end_time: "2025-03-01T20:00:00.000Z"
              - start_time: "2025-03-01T20:00:00.000Z"
                end_time: "2025-03-01T21:00:00.000Z"
              - start_time: "2025-03-01T21:00:00.000Z"
                end_time: "2025-03-01T22:00:00.000Z"
              - start_time: "2025-03-01T22:00:00.000Z"
                end_time: "2025-03-01T23:00:00.000Z"
              - start_time: "2025-03-01T23:00:00.000Z"
                end_time: "2025-03-02T00:00:00.000Z"
          - service: 3-hour
            slots:
              - start_time: "2025-03-01T15:00:00.000Z"
                end_time: "2025-03-01T18:00:00.000Z"
              - start_time: "2025-03-01T16:00:00.000Z"
                end_time: "2025-03-01T19:00:00.000Z"
              - start_time: "2025-03-01T17:00:00.000Z"
                end_time: "2025-03-01T20:00:00.000Z"
              - start_time: "2025-03-01T18:00:00.000Z"
                end_time: "2025-03-01T21:00:00.000Z"
              - start_time: "2025-03-01T19:00:00.000Z"
                end_time: "2025-03-01T22:00:00.000Z"
              - start_time: "2025-03-01T20:00:00.000Z"
                end_time: "2025-03-01T23:00:00.000Z"
              - start_time: "2025-03-01T21:00:00.000Z"
                end_time: "2025-03-02T00:00:00.000Z"
              - start_time: "2025-03-01T22:00:00.000Z"
                end_time: "2025-03-02T01:00:00.000Z"
              - start_time: "2025-03-01T23:00:00.000Z"
                end_time: "2025-03-02T02:00:00.000Z"
          - service: same-day
            slots:
              - start_time: "2025-03-01T19:00:00.000Z"
                end_time: "2025-03-02T00:00:00.000Z"
    Webhook:
      type: object
      properties:
        event:
          type: string
        order_id:
          type: string
        external_order_id:
          type: string
        driver:
          type: object
          properties:
            name:
              type: string
            phone:
              type: string
            vehicle:
              type: string
            location:
              type: object
              properties:
                lat:
                  type: string
                lon:
                  type: string
        date_time:
          type: string
      x-examples:
        Example 1:
          event: driver.location
          order_id: 6QLV55
          external_order_id: "12345"
          driver:
            name: John Doe
            phone: "+12324231132"
            vehicle: Toyota Highlander
            location:
              lat: "40.735073"
              lon: "-73.994431"
          date_time: "2024-04-12T03:59:05.000Z"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies: {}
  examples:
    quote:
      value:
        price: 3399.15
        tip: 0
        discount:
          percentage: 15
          original: 3999
        timeframe:
          service: 1-hour
          start_time: "2025-03-22T15:00:00.000Z"
          end_time: "2025-03-22T18:00:00.000Z"
    order:
      value:
        order_id: IL3YK3
        external_order_id: "1"
        status: processing
        pickup:
          customer_id: 134
          phone: 1234567890
          name: John Doe
          apt: ground level
          external_customer_id: "1"
          phone_formatted: (123) 456-7890
          note: Please pickup at front desk
          eta: null
          address:
            address_id: 940645
            formatted: "2049 Broadway, New York, NY 10023"
            street: 2049 Broadway
            city: New York
            state: NY
            zip: "10023"
            lat: 40.7779
            lon: -73.9825
            pickup: true
            delivery: true
            source: API
          required_verification:
            picture: true
          uploaded_verification:
            picture: {}
        delivery:
          tip: 0
          customer_id: 133
          phone: 1231231234
          name: Jane Doe
          apt: 47A
          external_customer_id: "2"
          phone_formatted: (123) 123-1234
          note: Use service entrance on Jane St
          eta: null
          address:
            address_id: 512381
            formatted: "14 N Moore St, New York, NY 10013"
            street: 14 N Moore St
            city: New York
            state: NY
            zip: "10013"
            lat: 40.7197
            lon: -74.0066
            pickup: true
            delivery: true
            source: API
          required_verification:
            picture: true
            recipient: true
            signature: true
          uploaded_verification:
            picture: {}
            recipient: {}
            signature: {}
          items:
            max_weight: 10
            max_dimension: 20
            total_quantity: 3
            total_weight: 20
            cubic_feet: 1.74
            exact: true
            size: medium
            description: Fits in backseat
            additional: 700
            items:
              - description: keg
                quantity: 2
                length: 20
                width: 15
                height: 10
                weight: 10
                measurement: 10lbs | 20” x 15” x 10”
                size: medium
              - description: tripod
                quantity: 1
                length: 20
                width: 15
                height: 10
                weight: 10
                measurement: 10lbs | 20” x 15” x 10”
                size: medium
        timeframe:
          service: 3-hour
          start_time: "2025-03-22T15:00:00.000Z"
          end_time: "2025-03-22T18:00:00.000Z"
        created_at: "2025-02-25T20:09:31.000Z"
        last_updated: "2025-02-25T20:09:31.000Z"
        pickup_tracking_url: "https://track.dbx.delivery/?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmRlcl9pZCI6IklMM1lLMyIsInR5cGUiOiJwaWNrdXAiLCJpYXQiOjE3NDA1ODcwNTAsImV4cCI6MTc3NjU4NzA1MH0.7O9gMQ2_GEN5mrPH4aTezOW_U4Uu6vLRiZuzhmgWKvw"
        delivery_tracking_url: "https://track.dbx.delivery/?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmRlcl9pZCI6IklMM1lLMyIsInR5cGUiOiJkZWxpdmVyeSIsImlhdCI6MTc0MDU4NzA1MCwiZXhwIjoxNzc2NTg3MDUwfQ.dqADoalSGreamn8yDs8ke_0yJl4AEdmf6cB7denFWuI"
        price: 1347
        driver: {}
        logs:
          - log: delivered
            datetime:
              start: "2025-03-22T15:30:00.000Z"
              end: "2025-03-22T18:05:00.000Z"
            is_completed: false
          - log: arrived_at_delivery
            datetime:
              start: "2025-03-22T15:30:00.000Z"
              end: "2025-03-22T18:00:00.000Z"
            is_completed: false
          - log: picked_up
            datetime:
              start: "2025-03-22T14:30:00.000Z"
              end: "2025-03-22T17:30:00.000Z"
            is_completed: false
          - log: arrived_at_pickup
            datetime:
              start: "2025-03-22T14:30:00.000Z"
              end: "2025-03-22T17:30:00.000Z"
            is_completed: false
          - log: assigned
            datetime:
              start: "2025-03-22T14:20:00.000Z"
              end: "2025-03-22T17:30:00.000Z"
            is_completed: false
          - log_id: 23
            log: processing
            by: user
            datetime: "2025-02-25T20:09:31.000Z"
            is_completed: true
  responses:
    404-not_found:
      description: not_found
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                code: invalid_delivery_parameters
                error: outside_of_delivery_time.
                messege: Ready by time outside of delivery hours.
            properties:
              code:
                type: string
              message:
                type: string
              reason:
                type: string
          examples:
            "":
              value:
                code: not_found
                message: The requested resource cannot be found.
                reason: The requested order does not exist.
    422-invalid_params:
      description: invalid_params
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                code: invalid_params
                message: One or more fields couldn't be validated.
                field_error:
                  - field: deliver_to
                    error: Invalid deliver to value.
                  - field: name
                    error: Minimum character length for  name is 2.
                  - field: phone
                    error: "Invalid phone number format. Required format: “+xxxxxxxxxx“."
                  - field: item2
                    error: "Invalid item value. Allowed items: “box”, “heavy-box”, “large-box”, “1-hander”, “2-hander”, “plant”, “bag”, “letter”, “garment”, “other”."
            properties:
              code:
                type: string
              message:
                type: string
              reason:
                type: string
          examples:
            "":
              value:
                code: invalid_params
                message: One or more values are not valid.
                reason: Invalid size or item dimensions.
    500-internal_server_error:
      description: internal_server_error
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                code: invalid_delivery_parameters
                error: outside_of_delivery_zone
                messege: Address outside of delivery zone.
            properties:
              code:
                type: string
              messege:
                type: string
          examples:
            "":
              value:
                code: internal_server_error
                message: "DBX expierenced an internal service error, please try again later."
    401-authentication_error:
      description: authentication_error
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            x-examples:
              Example 1:
                code: authorization_failed
                message: Invalid authorization token.
          examples:
            "":
              value:
                code: authentication_error
                message: Access denied for bearer token provided.
    400-missing_params:
      description: missing_params
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              field:
                type: string
            x-examples:
              Example 1:
                code: missing_params
                message: One or more required values are missing.
                field: bearer_token
          examples:
            "":
              value:
                code: missing_params
                message: One or more required values are missing.
                field: bearer_token
security:
  - bearerAuth: []
